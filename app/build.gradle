apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'de.mannodermaus.android-junit5'

android {
    compileSdkVersion rootProject.compile_sdk_version.toInteger()
    buildToolsVersion rootProject.build_tools_version
    flavorDimensions "calculator"

    defaultConfig {
        ext {
            version_major = 0
            version_minor = 0
            version_build = 0
            version_revision = 1
        }
        applicationId "duck.develop.calculator"
        minSdkVersion rootProject.min_sdk_version.toInteger()
        targetSdkVersion rootProject.target_sdk_version.toInteger()
        versionCode version_major * (10**4) + version_minor * (10**3) +
                version_build * (10**2) + version_revision
        versionName "$version_major.$version_minor.$version_build.$version_revision"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            storeFile file(properties.getProperty('storeFile'))
            storePassword properties.getProperty('storePassword')
            keyAlias properties.getProperty('keyAlias')
            keyPassword properties.getProperty('keyPassword')
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-debug.pro'
        }
        release {
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        calculator {
            dimension "calculator"
        }
        mock {
            dimension "calculator"
            applicationIdSuffix = ".mock"
        }
        dev {
            dimension "calculator"
            applicationIdSuffix = ".dev"
        }
    }
    android.variantFilter { variant ->
        if(variant.buildType.name == 'release' && (variant.getFlavors().get(0).name == 'dev'
                || variant.getFlavors().get(0).name == 'mock')) {
            variant.setIgnore(true)
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.productFlavors[0].name}-${variant.versionName}-" +
                    "${variant.versionCode}-${variant.variantData.variantConfiguration.buildType.name}.apk"
        }
    }
    dataBinding {
        enabled = true
    }
}
androidExtensions {
    experimental = true
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //Test
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junit5_version")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit5_version")
    // (Optional) If you need "Parameterized Tests"
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junit5_version")
    // (Optional) If you also have JUnit 4-based tests
    testImplementation "junit:junit:4.12"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit5_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "com.google.truth:truth:0.44"
    androidTestImplementation "com.google.truth:truth:0.44"

    //Google Service
    implementation 'com.google.firebase:firebase-core:17.2.0'
    implementation 'com.google.firebase:firebase-firestore:21.1.1'
    implementation 'com.google.firebase:firebase-config:19.0.1'
    //Support
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.1.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.1.0"
    implementation "com.google.android.material:material:1.0.0"
    implementation 'com.google.android:flexbox:1.1.0'
    implementation "androidx.fragment:fragment:1.1.0"
    implementation "androidx.fragment:fragment-testing:1.1.0"
    implementation "androidx.navigation:navigation-fragment-ktx:2.1.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.1.0"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
    //Database
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    //Log and Debug
    implementation "com.facebook.stetho:stetho:$stetho_version"
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"
    //Dependency Injection
//    implementation "org.koin:koin-java:$rootProject.koin_version" //자바 라이브러리
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"   //ACC ViewModel 연동 라이브러리
    testImplementation "org.koin:koin-test:$koin_version"
    androidTestImplementation "org.koin:koin-test:$koin_version"
    //ReactiveX
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha2'
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0-beta.1"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    //Network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    //UI - Dialog
    implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"
//    implementation 'com.afollestad.material-dialogs:files:$rootProject.material_dialogs_version'
//    implementation 'com.afollestad.material-dialogs:color:$rootProject.material_dialogs_version'
//    implementation 'com.afollestad.material-dialogs:datetime:$rootProject.material_dialogs_version'
//    implementation 'com.afollestad.material-dialogs:bottomsheets:$rootProject.material_dialogs_version'
}
